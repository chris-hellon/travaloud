@inject IStringLocalizer<SharedResource> L
@using Travaloud.Infrastructure.Common

<EditForm @ref="EditForm" Model="@RequestModel" OnValidSubmit="SaveAsync" Context="editContext">
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                @if (IsCreate)
                {
                    <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1"/>
                    @($"{L["Create"]} ")
                    ;
                    @L["Tour Itinerary"]
                    ;
                }
                else
                {
                    <MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1"/>
                    @($"{L["Edit"]} ")
                    ;
                    @L["Tour Itinerary"]
                }
            </MudText>

            <MudIconButton Icon="@Icons.Material.Filled.Help" Size="Size.Small" aria-label="delete" Color="@Color.Success" OnClick="ShowHelpDialog" Style="position: absolute; top: 19px; right: 58px;" Title="Help"></MudIconButton>
        </TitleContent>

        <DialogContent>
            <FluentValidationValidator @ref="_fluentValidationValidator"/>

            <MudGrid>
                @if (!IsCreate)
                {
                    <MudInput InputType="InputType.Hidden" Value="Id"></MudInput>
                }

                <MudItem xs="12" md="4">
                    <MudTextField Class="mb-2" Label="@L["Header"]" For="@(() => RequestModel.Header)" @bind-Value="RequestModel.Header" Placeholder="Enter a Header" Variant="Variant.Outlined" Required="true"/>
                    <MudTextField Class="mb-2" Label="@L["Title"]" For="@(() => RequestModel.Title)" @bind-Value="RequestModel.Title" Placeholder="Enter a Title" Variant="Variant.Outlined"/>
                    <MudItem xs="12" md="12">
                        <MudInputLabel Class="mb-2">@L["Description"]</MudInputLabel>
                        <Editor @bind-Value="RequestModel.Description" Field="@(() => RequestModel.Description)" Conf="@TinyMceConfig.Styles()" ApiKey="@TinyMceConfig.ApiKey"></Editor>
                    </MudItem>
                </MudItem>
                <MudItem xs="12" md="8">
                    <MudCarousel @ref="Carousel" Context="_itinerarySectionContext" Class="mud-width-full" ItemsSource="@RequestModel.Sections" Style="height:640px;" ShowArrows="@(RequestModel?.Sections?.Count() > 1)" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="false">
                        <ItemTemplate>
                            <MudCard Outlined="true" Elevation="2" Style="@($"{(RequestModel?.Sections?.Count() > 1 ? "margin-left: 50px; margin-right: 50px;" : "")}")">
                                <MudToolBar Style="padding-left:16px; padding-right:16px;">
                                    <ChildContent>
                                        <MudButton Size="Size.Small" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Edit" Color="Color.Tertiary" OnClick="(() => InvokeImagesDialog(_itinerarySectionContext))">Edit Images</MudButton>

                                        @if (RequestModel?.Sections?.Count() > 1)
                                        {
                                            <MudButton Size="Size.Small" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="(() => DeleteTourItinerarySection(_itinerarySectionContext))" Style="margin-left:5px;">Delete</MudButton>
                                        }
                                    </ChildContent>
                                </MudToolBar>
                                <MudCardContent Style="padding-top:0px;">
                                    <MudGrid>
                                        <MudItem xs="12" md="6">
                                            <MudTextField Label="@L["Title"]" Required="true" For="@(() => _itinerarySectionContext.Title)" @bind-Value="_itinerarySectionContext.Title" Variant="Variant.Outlined" Margin="Margin.Dense" Placeholder="Enter a Section Title" RequiredError=""/>
                                        </MudItem>
                                        <MudItem xs="12" md="6">
                                            <MudTextField Label="@L["Sub Title"]" For="@(() => _itinerarySectionContext.SubTitle)" @bind-Value="_itinerarySectionContext.SubTitle" Variant="Variant.Outlined" Margin="Margin.Dense" Placeholder="Enter a Section Sub Title"/>
                                        </MudItem>
                                        <MudItem xs="12" md="12">
                                            <MudInputLabel Class="mb-2">@L["Description"]</MudInputLabel>
                                            <Editor @bind-Value="_itinerarySectionContext.Description" Field="@(() => _itinerarySectionContext.Description)" Conf="@TinyMceConfig.Styles()" ApiKey="@TinyMceConfig.ApiKey"></Editor>
                                        </MudItem>
                                    </MudGrid>
                                </MudCardContent>
                            </MudCard>
                        </ItemTemplate>
                    </MudCarousel>
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton DisableElevation Variant="Variant.Filled" OnClick="@(() => AddTourItinerarySection())" IconColor="Color.Surface" StartIcon="@Icons.Material.Filled.Add">@L["Add New Section"]</MudButton>
            <MudButton DisableElevation Variant="Variant.Filled" OnClick="Cancel" StartIcon="@Icons.Material.Filled.Cancel">@L["Cancel"]</MudButton>
            <MudButton DisableElevation Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Success" StartIcon="@Icons.Material.Filled.Save">@L["Confirm"]</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>