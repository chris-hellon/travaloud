@page
@using System.Web
@using Newtonsoft.Json
@model Travaloud.Tenants.SharedRCL.Pages.PropertyBooking.IndexModel

@{
    ViewData["Title"] = "Book " + Model.PropertyName;

    <input type="hidden" id="BookingPropertyId" value="@Model.PropertyId"/>
    <input type="hidden" id="BookingUserId" value="@Model.UserId"/>

    @if (Model.TenantId == "fuse")
    {
        <section id="headerBanner">
            @Html.DisplayFor(x => x.HeaderBanner)
        </section>

        <section id="book-now" class="bg-light px-3 px-lg-0 py-5">
            @Html.DisplayFor(x => x.BookNowBanner)
        </section>

        var cloudbedsApiDataAvailable = Model.CloudbedsPropertyResponse is {Success: true, Data: not null} && Model.CloudbedsPropertyResponse.Data.Any();

        <section id="bookingSection">
            <div class="container">
                <div class="row pt-8 pb-8">
                    @if (!string.IsNullOrEmpty(Model.Property.CloudbedsApiKey))
                    {
                        <div class="col-lg-9 mb-4 mb-md-0">
                            @if (cloudbedsApiDataAvailable)
                            {
                                foreach (var room in Model.CloudbedsPropertyResponse.Data.First().PropertyRooms)
                                {
                                    room.CurrencySymbol = Model.CloudbedsPropertyResponse.Data.First().PropertyCurrency.CurrencySymbol;
                                    room.PropertyId = Model.PropertyId;
                                    room.PropertyName = Model.PropertyName;

                                    <partial name="_PropertyRoomCardPartial" model="room"/>
                                    <partial name="_PropertyRoomDetailsPartial" model="room"/>
                                }
                            }
                            else
                            {
                                <div class="alert" role="alert" data-mdb-color="warning" data-mdb-alert-init>
                                    <i class="fas fa-exclamation-triangle me-3"></i>There are no available rooms for the requested dates. <br />Please try another date range, or check out our other hostels.
                                </div>
                            }
                        </div>

                        <div class="col-lg-3 bg-grey sticky" data-mdb-sticky-init data-mdb-sticky-direction="both"  data-mdb-sticky-offset="92" data-mdb-sticky-delay="92" data-mdb-sticky-media="968">
                            <div class="shadow-4 p-3 mb-3">
                                @* <h3 class="fw-bold mb-5 mt-2 pt-1">Summary</h3> *@
                                @* *@
                                  <div class="p-3 bg-light mb-3">
                                                <h5 class="font-size-16 mb-0">Order Summary</h5>
                                            </div>
                                <div class="d-flex justify-content-between">
                                    <h5 class="text-uppercase">Total</h5>
                                    <h5 id="selectionTotal">@($"$ {Model.BasketItem?.Total ?? 0}")</h5>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <h6 class="text-uppercase text-muted" id="selectionRoomCount">@($"{Model.BasketItem?.Rooms.Count ?? 0} rooms")</h6>
                                </div>
                                <hr class="my-4">

                                <div class="d-flex justify-content-between">
                                    <h5 class="text-uppercase">Basket Total</h5>
                                    <h5 id="basketTotal">$ @($"{Model.Basket.Total:n2}")</h5>
                                </div>
                                <div class="d-flex justify-content-between mb-3">
                                    <a asp-page="/Basket/Index">
                                        <h6 class="text-primary">View Basket</h6>
                                    </a>
                                </div>

                                <a role="button" asp-page="/Checkout/Index" class="btn btn-primary btn-block btn-lg">
                                    Proceed To Checkout
                                </a>
                            </div>
                            <div class="shadow-4 p-4 rounded-5">
                                <h5 class="mb-4">Apply promo code</h5>

                                <div class="d-flex align-items-center">
                                    <input
                                        type="text"
                                        class="form-control rounded me-1"
                                        placeholder="Promo code"/>
                                    <button
                                        type="button"
                                        class="btn btn-primary btn-sm overflow-visible">
                                        Apply
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <iframe class="w-100" id="booking-iframe" src="@Model.IframeUrl" scrolling="no"></iframe>
                    }
                </div>

                @if (cloudbedsApiDataAvailable)
                {
                    <div class="row pb-5" id="securitySprite">
                        <div class="col-lg-12">
                            <div class="security-sprite security-pci"></div>
                            <div class="security-sprite security-ssl"></div>
                        </div>
                    </div>
                }
            </div>
        </section>
    }
    else
    {
        <div class="custom-height mt-n5 py-3 py-lg-5 bg-primary-dark">
            <div class="container py-5">
                <div class="row my-4">
                    <div class="col-12 has-parallax-scroll">
                        <h1 class="display-4 fw-bold ls-tight text-white">Book a Stay</h1>
                        <h4 class="mb-0 text-secondary text-shadow-0">@Model.PropertyName</h4>
                    </div>
                </div>
            </div>
        </div>

        <!--Section: Locations-->
        <div class="container bg-white rounded-6 position-relative pt-3 px-3 custom-mt">

            <iframe class="w-100" id="booking-iframe" src="@Model.IframeUrl" scrolling="no"></iframe>
        </div>
    }
}


@section Scripts {
    <script type="text/javascript">
        const propertyId = '@Model.PropertyId';
        const propertyName = '@Model.PropertyName';
        const propertyImageUrl = '@Model.Property.ImagePath';
        const checkInDate = new Date('@Model.CheckInDate.ToString("yyyy-MM-ddTHH:mm:ssZ")');
        const checkOutDate = new Date('@Model.CheckOutDate.ToString("yyyy-MM-ddTHH:mm:ssZ")');

        var serializedData = JSON.parse('@if (Model.CloudbedsPropertyResponse is {Success: true, Data: not null} && Model.CloudbedsPropertyResponse.Data.Any())
                                         {
                                             @Html.Raw(Model.CloudbedsDataSerialized)
                                         }');
    
        $(window).on('load', function () {
            var userSignedIn = '@User.Identity.IsAuthenticated';
            userSignedIn = userSignedIn.toLowerCase()

            console.log(serializedData);

            //if (userSignedIn == 'false') {
            //    window.setTimeout(function () {
            //        $('.book-now-login-titles').show();

            //        const myModalEl = document.getElementById('logInModal');
            //        const modal = new mdb.Modal(myModalEl);
            //        modal.show();
            //    }, 1500);
            //}
        });

        let bookingInserted = false;
        var postPropertyBooking = function (booking) {
            if (!bookingInserted) {
                postAjax("CreatePropertyBooking", booking, function (result) {
                    bookingInserted = true;
                });
            }
        }

        function Booking(description, totalAmount, currencyCode, itemQuantity, isPaid, guestId, items) {
            this.Id = null;
            this.Description = description;
            this.TotalAmount = parseValueToDecimal(totalAmount);
            this.CurrencyCode = currencyCode;
            this.ItemQuantity = parseValueToInt(itemQuantity);
            this.IsPaid = isPaid;
            this.Items = items;
            this.InvoiceId = null;
        }

        function BookingItem(startDate, endDate, amount, currencyCode, cloudbedsReservationId, cloudbedsPropertyId, rooms, propertyId, userId) {
            this.Id = null;
            this.StartDate = new Date(startDate);
            this.EndDate = new Date(endDate);
            this.Amount = parseValueToDecimal(amount);
            this.CloudbedsReservationId = parseValue(cloudbedsReservationId);
            this.CloudbedsPropertyId = parseValueToInt(cloudbedsPropertyId);
            this.RoomQuantity = rooms.length;
            this.Rooms = rooms;
            this.PropertyId = parseValue(propertyId);
            this.TourId = null;
        }

        function BookingItemRoom(roomName, amount, nights, checkInDate, checkOutDate, guestFirstName, guestLastName, cloudbedsGuestId) {
            this.Id = null;
            this.RoomName = roomName;
            this.Amount = parseValueToDecimal(amount);
            this.Nights = parseValueToInt(nights);
            this.CheckInDate = new Date(checkInDate);
            this.CheckOutDate = new Date(checkOutDate);
            this.GuestFirstName = guestFirstName;
            this.GuestLastName = guestLastName;
            this.CloudbedsGuestId = cloudbedsGuestId;
        }

        function parseValue(value) {
            return value != undefined && value != null && value.toString().length > 0 ? value.toString() : null;
        }
        function parseValueToInt(value) {
            value = parseValue(value);
            if (value != null) return parseInt(value);

            return value;
        }
        function parseValueToDecimal(value) {
            value = parseValue(value);
            if (value != null) return parseFloat(value);

            return value;
        }

        $(window).on('message', function (evt) {
            var data = evt.originalEvent.data;

            if (data.target == "cloudbeds-booking-widget-iframe-size") {
                $('iframe').height(data.data);

                //if ($(window).scrollTop() != 0) {
                //    window.scrollTo(0, 0);
                //}
            }
            else if (data.target == "cloudbeds-booking-confirmation") {
                let bookingConfirmation = data.data;

                let bookingItemRooms = [];
                let totalNights = 0;
                $(bookingConfirmation.resRooms).each(function (i, v) {
                    bookingItemRooms.push(new BookingItemRoom(v.room_type_name, v.total, v.nights, v.start_date, v.end_date, v.guest_first_name, v.guest_last_name, v.guest_id));
                    totalNights += v.nights;
                });

                let bookingItem = new BookingItem(bookingConfirmation.checkin_date, bookingConfirmation.checkout_date, bookingConfirmation.booking_total, bookingConfirmation.currency_code, bookingConfirmation.booking_id, bookingConfirmation.widget_property, bookingItemRooms, $('#BookingPropertyId').val(), $('#BookingUserId').val())
                let description = 'A stay at @Html.Raw(Model.PropertyName)';

                postPropertyBooking(new Booking(description, bookingConfirmation.booking_total, bookingConfirmation.currency_code, 1, true, $('#BookingUserId').val(), [bookingItem]));
            }
        });</script>

    <script type="text/javascript" src="/shared/js/propertybooking.min.js"></script>
}

@section Styles {
    <style type="text/css">
        .header-banner-image-background {
            min-height: 300px;
        }

    </style>

}