let elements;document.querySelector("#checkoutForm").addEventListener("submit",handleSubmit);async function initialize(){const response=await fetch("/create-payment-intent",{method:"POST",headers:{"Content-Type":"application/json"}});const{clientSecret}=await response.json();const appearance={theme:"stripe"};elements=stripe.elements({appearance:appearance,clientSecret:clientSecret});const paymentElementOptions={layout:"tabs"};const paymentElement=elements.create("payment",paymentElementOptions);paymentElement.mount("#payment-element")}async function handleSubmit(e){let valid=$(this).valid();if(!validateSelectElements($(this),valid)){e.preventDefault();return false}}async function checkStatus(){const clientSecret=new URLSearchParams(window.location.search).get("payment_intent_client_secret");if(!clientSecret){return}const{paymentIntent}=await stripe.retrievePaymentIntent(clientSecret);switch(paymentIntent.status){case"succeeded":showMessage("Payment succeeded!");break;case"processing":showMessage("Your payment is processing.");break;case"requires_payment_method":showMessage("Your payment was not successful, please try again.");break;default:showMessage("Something went wrong.");break}}function showMessage(messageText){const messageContainer=document.querySelector("#payment-message");messageContainer.classList.remove("hidden");messageContainer.textContent=messageText;setTimeout(function(){messageContainer.classList.add("hidden");messageContainer.textContent=""},4e3)}function setLoading(isLoading){if(isLoading){document.querySelector("#submit").disabled=true;document.querySelector("#spinner").classList.remove("hidden");document.querySelector("#button-text").classList.add("hidden")}else{document.querySelector("#submit").disabled=false;document.querySelector("#spinner").classList.add("hidden");document.querySelector("#button-text").classList.remove("hidden")}}