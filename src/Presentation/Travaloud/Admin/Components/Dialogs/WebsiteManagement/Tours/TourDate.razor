@using Travaloud.Infrastructure.Common
@inject IStringLocalizer<SharedResource> L

<EditForm @ref="EditForm" Model="@RequestModel" OnValidSubmit="SaveAsync" Context="editContext">
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                @if (IsCreate)
                {
                    <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1"/>
                    @($"{L["Create"]} ")
                    ;
                    @L["Tour Date"]
                    ;
                }
                else
                {
                    <MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1"/>
                    @($"{L["Edit"]} ")
                    ;
                    @L["Tour Date"]
                }
            </MudText>

            <MudIconButton Icon="@Icons.Material.Filled.Help" Size="Size.Small" aria-label="delete" Color="@Color.Success" OnClick="ShowHelpDialog" Style="position: absolute; top: 19px; right: 58px;" Title="Help"></MudIconButton>
        </TitleContent>

        <DialogContent>
            <FluentValidationValidator @ref="_fluentValidationValidator"/>

            <MudGrid>
                @if (!IsCreate)
                {
                    <MudInput InputType="InputType.Hidden" Value="Id"></MudInput>
                }

                <MudItem xs="12" md="12">
                    <MudDatePicker Label="@L["Start Date"]" @bind-Date="RequestModel.StartDate" For="@(() => RequestModel.StartDate)" MinDate="DateTime.Now.AddDays(-1)" DateFormat="dd/MM/yyyy" Variant="Variant.Outlined" Margin="Margin.Dense" Required="true"/>
                </MudItem>

                <MudItem xs="12" md="12">
                    <MudTimePicker Label="@L["Start Time"]" AmPm="true" @bind-Time="RequestModel.StartTime" For="@(() => RequestModel.StartTime)" Variant="Variant.Outlined" Margin="Margin.Dense" Required="true"/>
                </MudItem>

                <MudItem xs="12" md="12">
                    <MudSelect T="Guid?" Label="@L["Price"]" @bind-Value="RequestModel.TourPriceId" Variant="Variant.Outlined" Margin="Margin.Dense" HelperText="Select a Price that this date applies to." Required="true">
                        <MudSelectItem T="Guid?" Value="null" Style="display:none;"></MudSelectItem>
                        @if (Tour.TourPrices != null && Tour.TourPrices.Any(x => x.DayDuration.HasValue || x.NightDuration.HasValue || x.HourDuration.HasValue))
                        {
                            @foreach (var tourPrice in Tour.TourPrices.Where(x => x.DayDuration.HasValue || x.NightDuration.HasValue || x.HourDuration.HasValue))
                            {
                                <MudSelectItem T="Guid?" Value="@tourPrice.Id">@tourPrice.Price @tourPrice.Title</MudSelectItem>
                            }
                        }
                    </MudSelect>
                </MudItem>

                <MudItem xs="12" md="12">
                    <MudTextField Label="@L["Price Override"]" InputType="InputType.Number" For="@(() => RequestModel.PriceOverride)" @bind-Value="RequestModel.PriceOverride" Variant="Variant.Outlined" Margin="Margin.Dense" HelperText="Would you like this Date to have it's own price?"/>
                </MudItem>

                @if (IsCreate)
                {
                    <MudItem xs="12" md="12">
                        <MudSwitch @bind-Checked="@RequestModel.Repeats" Label="Is this a recurring date?" Color="Color.Primary"/>
                    </MudItem>

                    @if (RequestModel.Repeats)
                    {
                        <MudItem xs="12" md="6">
                            <MudTextField Label="@L["Repeats Duration"]" InputType="InputType.Number" For="@(() => RequestModel.RepeatsDuration)" @bind-Value="RequestModel.RepeatsDuration" Variant="Variant.Outlined" Margin="Margin.Dense" HelperText="How long should it repeat for?"/>
                        </MudItem>
                        <MudItem xs="12" md="6">
                            <MudSelect T="string" Label="@L["Time Period"]" @bind-Value="RequestModel.RepeatsCondition" Variant="Variant.Outlined" Margin="Margin.Dense" HelperText="eg. Weeks, Months, Years">
                                @foreach (var condition in _repeatConditions)
                                {
                                    <MudSelectItem T="string" Value="@condition">@condition</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                    }
                }
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton DisableElevation Variant="Variant.Filled" OnClick="Cancel" StartIcon="@Icons.Material.Filled.Cancel">@L["Cancel"]</MudButton>
            <MudButton DisableElevation Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Success" StartIcon="@Icons.Material.Filled.Save">@L["Confirm"]</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>