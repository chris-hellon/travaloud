@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Travaloud.Infrastructure.Common.Extensions
@model CardComponent

@inject Wangkanai.Detection.Services.IDetectionService DetectionService

@{
    var isLightbox = Model.LightboxImages != null && Model.LightboxImages.Any();
    var id = $"lightbox{Model.Title.ConvertToCamelCase()}Modal";
    var isMobile = DetectionService.Device.Type == Wangkanai.Detection.Models.Device.Mobile;
    var imageWidth = Model.CssClass.Contains("col-lg-4") || Model.CssClass.Contains("col-lg-12") ? 610 : 700;
    var imageHeight = 400;
    if (isMobile)
    {
        imageWidth = 500;
        imageHeight = 280;
    }

    var thumbnailImageSrc = !string.IsNullOrEmpty(Model.ImageSrc) ? Model.ImageSrc.FormatImageUrl(imageWidth, "fuse") : "";
    var cssClass = $"{Model.CssClass} {(isLightbox ? "lightbox-card" : "")} {(Model.AnimationDelay.HasValue ? "has-parallax-scroll" : "")}";

    if (cssClass.Replace(" ", "").Length > 0)
    {
        <div class="@cssClass">
            <div class="card rounded-0 offcut-image-border @(isLightbox ? "mb-4" : "")" @(isLightbox ? $"data-mdb-toggle=modal data-mdb-target=#{id} role=button" : "")>
                @if (!string.IsNullOrEmpty(thumbnailImageSrc))
                {
                    <img src="@(thumbnailImageSrc)" alt="@($"{Model.Title} image")" width="@imageWidth" height="@imageHeight" class="card-img-top rounded-0 @(isLightbox ? "object-fit-cover" : "")"/>
                }

                @if (Model.LightboxImages == null || !Model.LightboxImages.Any())
                {
                    <div class="card-body p-5">
                        <span class="card-title mb-4 display-6">@Html.Raw(Model.Title)</span>
                        <p class="card-text">@Html.Raw(Model.Body)</p>

                        @if (Model.ButtonComponent != null)
                        {
                            <div class="mt-auto">
                                <partial name="_ButtonLinkPartial" model="Model.ButtonComponent"/>
                            </div>

                        }
                    </div>
                }
                else
                {
                    <span class="tilted position-absolute">@Model.Title</span>
                }
            </div>

            @if (isLightbox)
            {

                <a class="text-purple" data-mdb-toggle="modal" data-mdb-target="#@id">@Model.Title.ToUpper() INFO</a>
            }
        </div>
    }
    else
    {
        <div class="card h-100 rounded-0 offcut-image-border @(isLightbox ? "mb-4" : "")" @(isLightbox ? $"data-mdb-toggle=modal data-mdb-target=#{id} role=button" : "")>
            <img src="@(thumbnailImageSrc)" alt="@($"{Model.Title} image")" width="@imageWidth" height="@imageHeight" class="card-img-top rounded-0 @(isLightbox ? "object-fit-cover" : "")" />

            @if (Model.LightboxImages == null || !Model.LightboxImages.Any())
            {
                <div class="card-body p-5 d-flex flex-column">
                    <span class="card-title mb-4 display-6">@Html.Raw(Model.Title)</span>
                    <p class="card-text">@Html.Raw(Model.Body)</p>

                    @if (Model.ButtonComponent != null)
                    {
                        <div class="mt-auto">
                            <partial name="_ButtonLinkPartial" model="Model.ButtonComponent" />
                        </div>

                    }
                </div>
            }
            else
            {
                <span class="tilted position-absolute">@Model.Title</span>
            }
        </div>

        @if (isLightbox)
        {

            <a class="text-purple" data-mdb-toggle="modal" data-mdb-target="#@id">@Model.Title.ToUpper() INFO</a>
        }
    }

}


