@model HeaderBannerComponent

<div class="container-fluid p-0 header-banner">
    @if (Model.SlideshowImages != null && Model.SlideshowImages.Any())
    {
        <div class="d-flex justify-content-center align-items-end header-banner-image-background">
            <!-- Carousel wrapper -->
            <div id="hostelSlideshow" class="carousel slide carousel-fade position-absolute start-0 w-100 h-100 top-0" data-mdb-ride="carousel">
                <!-- Inner -->
                <div class="carousel-inner h-100">
                    @for (int i = 0; i < Model.SlideshowImages.Count; i++)
                    {
                        var image = Model.SlideshowImages[i];
                        <!-- Single item -->
                        <div class="carousel-item h-100 @(i == 0 ? "active" : "")" style="background-size: cover; background-repeat: no-repeat; background-position-y: 80%; background-image:url('@image.Replace("https://travaloud.azureedge.net", "https://travaloudcdn.azureedge.net").Replace("w=1000", "w=1800")');">

                        </div>
                    }
                </div>

                @if (Model.SlideshowImages.Count > 1)
                {
                    <!-- Inner -->
                    <!-- Controls -->
                    <button class="carousel-control-prev" type="button" data-mdb-target="#hostelSlideshow" data-mdb-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-mdb-target="#hostelSlideshow" data-mdb-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                }

            </div>
            <!-- Carousel wrapper -->

            @if (!string.IsNullOrEmpty(Model.SubTitle) || !string.IsNullOrEmpty(Model.Title))
            {
                <div class="container mb-n5 has-parallax-scroll">
                    <div class="row">
                        <div class="d-flex align-items-center justify-content-center col-lg-12">
                            <h1 class="text-white bg-black px-3 pt-2 pb-1 d-inline-block position-relative">
                                @if (!string.IsNullOrEmpty(Model.SubTitle))
                                {
                                    <span class="tilted text-white px-3 py-2">@Html.Raw(Model.SubTitle)</span>
                                }
                                @if (!string.IsNullOrEmpty(Model.Title))
                                {
                                    @Html.Raw(Model.Title)
                                }

                            </h1>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="header-banner-image-background d-flex justify-content-center align-items-end" style="background-image:url('@Model.ImageSrc.Replace("https://travaloud.azureedge.net", "https://travaloudcdn.azureedge.net").Replace("w=1000", "w=1800")'); @(Model.BackgroundTop.HasValue ? $"background-position-y:{Model.BackgroundTop.Value}%; background-position:left !important;" : "")">
            @if (!string.IsNullOrEmpty(Model.SubTitle) || !string.IsNullOrEmpty(Model.Title))
            {
                <div class="container mb-n5 has-parallax-scroll">
                    <div class="row">
                        <div class="d-flex align-items-center justify-content-center col-lg-12">
                            <h1 class="text-white bg-black px-3 pt-2 pb-1 d-inline-block position-relative">
                                @if (!string.IsNullOrEmpty(Model.SubTitle))
                                {
                                    <span class="tilted text-white px-3 py-2">@Html.Raw(Model.SubTitle)</span>
                                }
                                @if (!string.IsNullOrEmpty(Model.Title))
                                {
                                    @Html.Raw(Model.Title)
                                }
                            </h1>
                        </div>
                    </div>
                </div>
            }
        </div>
    }


    @if (Model.Body != null)
    {
        <div class="container-fluid position-relative @(Model.OvalContainers != null && Model.OvalContainers.Any() ? "overflow-hidden" : "") has-parallax-scroll">
            <div class="container position-relative pt-4">
                <div class="row d-flex justify-content-center align-items-center">
                    @if (Model.Body != null)
                    {
                        <div class="col-lg-6 text-center py-5">
                            @Html.Raw(Model.Body)
                        </div>
                    }

                    @if (Model.OvalContainers != null)
                    {
                        @Html.DisplayFor(x => x.OvalContainers)
                    }
                </div>
            </div>
        </div>
    }
</div>